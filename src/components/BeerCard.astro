---
export interface Props {
  name: string;
  type: string;
  abv: number;
  ibu: number;
  description: string;
  color?: string;
  available?: boolean;
  image?: string;
}

const { 
  name,
  type,
  abv,
  ibu,
  description,
  color = '#FFA000',
  available = true,
  image
} = Astro.props;
---

<div class={`beer-card ${available ? 'available' : 'unavailable'}`} data-color={color}>
  <div class="beer-card-inner">
    <div class="beer-glass">
      <div class="beer-liquid" style={`background: linear-gradient(to top, ${color}, ${color}CC);`}></div>
      <div class="beer-foam"></div>
      <div class="beer-bubbles">
        <div class="bubble"></div>
        <div class="bubble"></div>
        <div class="bubble"></div>
      </div>
    </div>
    
    <div class="beer-info">
      <h3 class="beer-name">{name}</h3>
      <p class="beer-type">{type}</p>
      
      <div class="beer-stats">
        <div class="stat">
          <span class="stat-label">ABV</span>
          <span class="stat-value">{abv}%</span>
        </div>
        <div class="stat">
          <span class="stat-label">IBU</span>
          <span class="stat-value">{ibu}</span>
        </div>
      </div>
      
      <p class="beer-description">{description}</p>
      
      <div class="beer-status">
        {available ? (
          <span class="status-available">On Tap</span>
        ) : (
          <span class="status-unavailable">Coming Soon</span>
        )}
      </div>
    </div>
  </div>
  
  <div class="ripple-overlay"></div>
</div>

<style lang="scss">
  @import '../styles/variables';

  .beer-card {
    background: rgba(245, 230, 211, 0.05);
    border-radius: $border-radius-lg;
    padding: $spacing-lg;
    position: relative;
    overflow: hidden;
    cursor: pointer;
    transition: all $transition-medium;
    border: 1px solid rgba(245, 230, 211, 0.1);
    
    &:hover {
      transform: translateY(-8px);
      box-shadow: $shadow-xl;
      background: rgba(245, 230, 211, 0.08);
      
      .beer-glass .beer-liquid {
        height: 80%;
      }
      
      .beer-bubbles .bubble {
        animation-play-state: running;
      }
      
      .ripple-overlay {
        animation: rippleEffect 0.6s ease-out;
      }
    }
    
    &.unavailable {
      opacity: 0.7;
      
      .beer-glass .beer-liquid {
        height: 20%;
        opacity: 0.5;
      }
    }
    
    .beer-card-inner {
      display: flex;
      gap: $spacing-lg;
      align-items: flex-start;
    }
    
    .beer-glass {
      width: 80px;
      height: 120px;
      position: relative;
      background: linear-gradient(to bottom, transparent 0%, rgba(245, 230, 211, 0.1) 100%);
      border-radius: 8px 8px 12px 12px;
      border: 2px solid rgba(245, 230, 211, 0.3);
      overflow: hidden;
      flex-shrink: 0;
      
      .beer-liquid {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 60%;
        background: linear-gradient(to top, var(--beer-color, #{$amber-gold}), var(--beer-color, #{$amber-gold})CC);
        transition: height $transition-liquid;
        border-radius: 0 0 10px 10px;
        
        &::before {
          content: '';
          position: absolute;
          top: 0;
          left: 10%;
          width: 20%;
          height: 100%;
          background: linear-gradient(to bottom, rgba(255, 255, 255, 0.3), transparent);
          border-radius: 2px;
        }
      }
      
      .beer-foam {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 20px;
        background: linear-gradient(to bottom, $beer-foam, transparent);
        border-radius: 6px 6px 0 0;
        opacity: 0.9;
        
        &::before {
          content: '';
          position: absolute;
          top: 2px;
          left: 20%;
          width: 60%;
          height: 8px;
          background: rgba(255, 255, 255, 0.8);
          border-radius: 4px;
        }
      }
      
      .beer-bubbles {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 100%;
        pointer-events: none;
        
        .bubble {
          position: absolute;
          width: 4px;
          height: 4px;
          background: rgba(255, 255, 255, 0.6);
          border-radius: 50%;
          animation: bubbleRise 2s infinite ease-in-out;
          animation-play-state: paused;
          
          &:nth-child(1) {
            left: 30%;
            animation-delay: 0s;
          }
          
          &:nth-child(2) {
            left: 50%;
            animation-delay: 0.7s;
          }
          
          &:nth-child(3) {
            left: 70%;
            animation-delay: 1.4s;
          }
        }
      }
    }
    
    .beer-info {
      flex: 1;
      
      .beer-name {
        font-size: 1.5rem;
        color: $amber-gold;
        margin-bottom: $spacing-xs;
        font-family: $font-display;
      }
      
      .beer-type {
        color: $foam-cream;
        font-style: italic;
        margin-bottom: $spacing-sm;
        opacity: 0.8;
      }
      
      .beer-stats {
        display: flex;
        gap: $spacing-lg;
        margin-bottom: $spacing-sm;
        
        .stat {
          display: flex;
          flex-direction: column;
          align-items: center;
          
          .stat-label {
            font-size: 0.8rem;
            color: rgba(245, 230, 211, 0.7);
            margin-bottom: 2px;
          }
          
          .stat-value {
            font-weight: 600;
            color: $amber-gold;
            font-size: 1.1rem;
          }
        }
      }
      
      .beer-description {
        color: rgba(245, 230, 211, 0.9);
        line-height: 1.5;
        margin-bottom: $spacing-sm;
        font-size: 0.9rem;
      }
      
      .beer-status {
        .status-available {
          background: rgba(27, 58, 27, 0.8);
          color: #4CAF50;
          padding: $spacing-xs $spacing-sm;
          border-radius: $border-radius-sm;
          font-size: 0.8rem;
          font-weight: 600;
          border: 1px solid rgba(76, 175, 80, 0.3);
        }
        
        .status-unavailable {
          background: rgba(138, 43, 226, 0.2);
          color: #BA68C8;
          padding: $spacing-xs $spacing-sm;
          border-radius: $border-radius-sm;
          font-size: 0.8rem;
          font-weight: 600;
          border: 1px solid rgba(186, 104, 200, 0.3);
        }
      }
    }
    
    .ripple-overlay {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: radial-gradient(circle, rgba(255, 160, 0, 0.2) 0%, transparent 70%);
      opacity: 0;
      pointer-events: none;
      border-radius: $border-radius-lg;
    }
  }

  @keyframes bubbleRise {
    0% {
      transform: translateY(0) scale(0);
      opacity: 0;
    }
    50% {
      transform: translateY(-30px) scale(1);
      opacity: 1;
    }
    100% {
      transform: translateY(-60px) scale(0);
      opacity: 0;
    }
  }

  @keyframes rippleEffect {
    0% {
      opacity: 0;
      transform: scale(0.8);
    }
    50% {
      opacity: 1;
      transform: scale(1);
    }
    100% {
      opacity: 0;
      transform: scale(1.2);
    }
  }

  @media (max-width: $breakpoint-md) {
    .beer-card {
      .beer-card-inner {
        flex-direction: column;
        align-items: center;
        text-align: center;
      }
      
      .beer-glass {
        margin-bottom: $spacing-sm;
      }
      
      .beer-stats {
        justify-content: center;
      }
    }
  }
</style>

<script>
  class BeerCard {
    constructor(element) {
      this.element = element;
      this.liquid = element.querySelector('.beer-liquid');
      this.color = element.dataset.color || '#FFA000';
      
      this.setupColor();
      this.setupIntersectionObserver();
    }
    
    setupColor() {
      this.element.style.setProperty('--beer-color', this.color);
    }
    
    setupIntersectionObserver() {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            this.element.classList.add('beer-fill');
          }
        });
      }, {
        threshold: 0.3
      });
      
      observer.observe(this.element);
    }
  }
  
  // Initialize all beer cards
  document.addEventListener('DOMContentLoaded', () => {
    const cards = document.querySelectorAll('.beer-card');
    cards.forEach(card => {
      new BeerCard(card);
    });
  });
</script>