---
export interface Props {
  currentPage?: string;
}

const { currentPage = 'home' } = Astro.props;

const navItems = [
  { id: 'home', label: 'Home', href: '/', icon: 'üè†' },
  { id: 'taps', label: 'Tap List', href: '#taps', icon: 'üç∫' },
  { id: 'story', label: 'Our Story', href: '#story', icon: 'üìñ' },
  { id: 'taproom', label: 'Taproom', href: '#taproom', icon: 'üéµ' },
  { id: 'contact', label: 'Contact', href: '#contact', icon: 'üìç' }
];
---

<nav class="liquid-tab-navbar" data-current={currentPage}>
  <div class="navbar-tab">
    <div class="tab-handle">
      <div class="tab-icon">‚ö°</div>
      <div class="tab-text">Menu</div>
    </div>
    <div class="liquid-blob"></div>
  </div>
  
  <div class="navbar-menu">
    <div class="menu-background">
      <svg class="liquid-background" viewBox="0 0 300 400" preserveAspectRatio="none">
        <path class="liquid-path" d="M0,0 Q150,50 300,0 L300,400 Q150,350 0,400 Z"></path>
      </svg>
    </div>
    
    <div class="menu-content">
      <div class="brand-section">
        <div class="brand-logo">
          <span class="logo-icon">üç∫</span>
          <h3>Black Lodge</h3>
        </div>
        <div class="brand-tagline">Mysterious Brews</div>
      </div>
      
      <div class="nav-items">
        {navItems.map((item) => (
          <a 
            href={item.href} 
            class={`nav-item ${item.id === currentPage ? 'active' : ''}`}
            data-nav-id={item.id}
          >
            <div class="nav-icon">{item.icon}</div>
            <div class="nav-label">{item.label}</div>
            <div class="nav-ripple"></div>
          </a>
        ))}
      </div>
      
      <div class="menu-footer">
        <div class="hours-info">
          <div class="hours-label">Open Now</div>
          <div class="hours-time">4PM - 10PM</div>
        </div>
        <div class="social-links">
          <a href="#" class="social-link">üì∑</a>
          <a href="#" class="social-link">üê¶</a>
          <a href="#" class="social-link">üìò</a>
        </div>
      </div>
    </div>
  </div>
  
  <div class="navbar-overlay"></div>
</nav>

<style lang="scss">
  @import '../styles/variables';

  .liquid-tab-navbar {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    z-index: 1000;
    pointer-events: none;
    
    .navbar-tab {
      position: absolute;
      top: 50%;
      left: 0;
      transform: translateY(-50%);
      width: 80px;
      height: 160px;
      pointer-events: auto;
      cursor: pointer;
      
      .tab-handle {
        position: relative;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, rgba(255, 160, 0, 0.9), rgba(255, 213, 79, 0.9));
        border-radius: 0 25px 25px 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: $spacing-xs;
        backdrop-filter: blur(10px);
        border: 2px solid rgba(255, 160, 0, 0.3);
        border-left: none;
        transition: all $transition-medium;
        box-shadow: 4px 0 20px rgba(255, 160, 0, 0.3);
        
        .tab-icon {
          font-size: 1.5rem;
          animation: pulse 2s infinite;
        }
        
        .tab-text {
          font-size: 0.8rem;
          font-weight: 600;
          color: $roasted-malt;
          writing-mode: vertical-lr;
          text-orientation: mixed;
          transform: rotate(180deg);
        }
        
        &:hover {
          transform: translateX(5px);
          box-shadow: 6px 0 25px rgba(255, 160, 0, 0.4);
        }
      }
      
      .liquid-blob {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 20px;
        height: 20px;
        background: rgba(255, 160, 0, 0.6);
        border-radius: 50%;
        opacity: 0;
        animation: blobFloat 3s ease-in-out infinite;
      }
    }
    
    .navbar-menu {
      position: fixed;
      top: 0;
      left: -300px;
      width: 300px;
      height: 100vh;
      transition: left $transition-liquid;
      pointer-events: auto;
      
      .menu-background {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        
        .liquid-background {
          width: 100%;
          height: 100%;
          
          .liquid-path {
            fill: rgba(26, 14, 10, 0.98);
            stroke: rgba(255, 160, 0, 0.5);
            stroke-width: 2;
            filter: drop-shadow(0 0 15px rgba(255, 160, 0, 0.3));
          }
        }
      }
      
      .menu-content {
        position: relative;
        height: 100%;
        padding: $spacing-xl $spacing-lg;
        backdrop-filter: blur(8px);
        background: rgba(26, 14, 10, 0.8);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        
        .brand-section {
          margin-bottom: $spacing-xl;
          
          .brand-logo {
            display: flex;
            align-items: center;
            gap: $spacing-sm;
            margin-bottom: $spacing-xs;
            
            .logo-icon {
              font-size: 2rem;
              animation: spin 4s linear infinite;
            }
            
            h3 {
              font-family: $font-display;
              color: $amber-gold;
              font-size: 1.5rem;
              margin: 0;
              text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
            }
          }
          
          .brand-tagline {
            color: rgba(245, 230, 211, 0.7);
            font-style: italic;
            font-size: 0.9rem;
            margin-left: 3rem;
          }
        }
        
        .nav-items {
          flex: 1;
          display: flex;
          flex-direction: column;
          gap: $spacing-sm;
          
          .nav-item {
            position: relative;
            display: flex;
            align-items: center;
            gap: $spacing-md;
            padding: $spacing-md;
            border-radius: $border-radius-lg;
            color: $foam-cream;
            text-decoration: none;
            transition: all $transition-medium;
            overflow: hidden;
            
            &:hover {
              background: rgba(255, 160, 0, 0.1);
              transform: translateX(10px);
              
              .nav-ripple {
                animation: rippleExpand 0.6s ease-out;
              }
            }
            
            &.active {
              background: rgba(255, 160, 0, 0.2);
              border: 1px solid rgba(255, 160, 0, 0.3);
              
              .nav-icon {
                animation: bounce 0.5s ease-out;
              }
            }
            
            .nav-icon {
              font-size: 1.2rem;
              width: 2rem;
              text-align: center;
            }
            
            .nav-label {
              font-weight: 600;
              flex: 1;
              text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
            }
            
            .nav-ripple {
              position: absolute;
              top: 50%;
              left: 50%;
              width: 0;
              height: 0;
              background: rgba(255, 160, 0, 0.3);
              border-radius: 50%;
              transform: translate(-50%, -50%);
              pointer-events: none;
            }
          }
        }
        
        .menu-footer {
          .hours-info {
            background: rgba(255, 160, 0, 0.1);
            padding: $spacing-sm;
            border-radius: $border-radius-md;
            margin-bottom: $spacing-md;
            border: 1px solid rgba(255, 160, 0, 0.2);
            
            .hours-label {
              font-size: 0.8rem;
              color: rgba(245, 230, 211, 0.7);
              margin-bottom: 2px;
            }
            
            .hours-time {
              font-weight: 600;
              color: $amber-gold;
            }
          }
          
          .social-links {
            display: flex;
            gap: $spacing-sm;
            justify-content: center;
            
            .social-link {
              display: flex;
              align-items: center;
              justify-content: center;
              width: 40px;
              height: 40px;
              background: rgba(255, 160, 0, 0.1);
              border-radius: 50%;
              font-size: 1.2rem;
              transition: all $transition-medium;
              
              &:hover {
                background: rgba(255, 160, 0, 0.2);
                transform: scale(1.1);
              }
            }
          }
        }
      }
    }
    
    .navbar-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background: rgba(0, 0, 0, 0.5);
      opacity: 0;
      visibility: hidden;
      transition: all $transition-medium;
      backdrop-filter: blur(2px);
      pointer-events: auto;
    }
    
    &.menu-open {
      .navbar-menu {
        left: 0;
      }
      
      .navbar-overlay {
        opacity: 1;
        visibility: visible;
      }
      
      .navbar-tab .tab-handle {
        transform: translateX(280px);
        border-radius: 25px 0 0 25px;
        border-left: 2px solid rgba(255, 160, 0, 0.3);
        border-right: none;
        
        .tab-text {
          transform: rotate(0deg);
        }
      }
    }
  }

  @keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
  }
  
  @keyframes blobFloat {
    0%, 100% { 
      transform: translate(-50%, -50%) scale(0);
      opacity: 0;
    }
    50% { 
      transform: translate(-50%, -50%) scale(1);
      opacity: 1;
    }
  }
  
  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
  
  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-5px); }
    60% { transform: translateY(-3px); }
  }
  
  @keyframes rippleExpand {
    0% {
      width: 0;
      height: 0;
      opacity: 1;
    }
    100% {
      width: 200px;
      height: 200px;
      opacity: 0;
    }
  }

  @media (max-width: $breakpoint-md) {
    .liquid-tab-navbar {
      .navbar-tab {
        width: 60px;
        height: 120px;
        
        .tab-handle {
          .tab-icon {
            font-size: 1.2rem;
          }
          
          .tab-text {
            font-size: 0.7rem;
          }
        }
      }
      
      .navbar-menu {
        width: 100vw;
        left: -100vw;
        
        .menu-content {
          padding: $spacing-lg $spacing-md;
        }
      }
      
      &.menu-open {
        .navbar-menu {
          left: 0;
        }
        
        .navbar-tab .tab-handle {
          transform: translateX(calc(100vw - 60px));
        }
      }
    }
  }
</style>

<script>
  class LiquidTabNavbar {
    constructor() {
      this.navbar = document.querySelector('.liquid-tab-navbar');
      this.tab = this.navbar.querySelector('.navbar-tab');
      this.overlay = this.navbar.querySelector('.navbar-overlay');
      this.navItems = this.navbar.querySelectorAll('.nav-item');
      this.liquidPath = this.navbar.querySelector('.liquid-path');
      
      this.isOpen = false;
      this.animationId = null;
      
      this.init();
    }
    
    init() {
      this.setupEventListeners();
      this.startLiquidAnimation();
    }
    
    setupEventListeners() {
      this.tab.addEventListener('click', () => this.toggleMenu());
      this.overlay.addEventListener('click', () => this.closeMenu());
      
      this.navItems.forEach(item => {
        item.addEventListener('click', (e) => {
          const href = item.getAttribute('href');
          if (href.startsWith('#')) {
            e.preventDefault();
            this.handleNavigation(item);
          } else if (href === '/') {
            // Handle home navigation
            this.closeMenu();
          }
        });
      });
      
      // Close menu on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && this.isOpen) {
          this.closeMenu();
        }
      });
    }
    
    toggleMenu() {
      if (this.isOpen) {
        this.closeMenu();
      } else {
        this.openMenu();
      }
    }
    
    openMenu() {
      this.navbar.classList.add('menu-open');
      this.isOpen = true;
      document.body.style.overflow = 'hidden';
      
      // Animate nav items in
      this.navItems.forEach((item, index) => {
        setTimeout(() => {
          item.style.animation = `slideInLeft 0.4s ease-out ${index * 0.1}s forwards`;
        }, 100);
      });
    }
    
    closeMenu() {
      this.navbar.classList.remove('menu-open');
      this.isOpen = false;
      document.body.style.overflow = '';
      
      // Reset nav item animations
      this.navItems.forEach(item => {
        item.style.animation = '';
      });
    }
    
    handleNavigation(item) {
      const targetId = item.getAttribute('href').substring(1);
      const targetElement = document.getElementById(targetId);
      
      if (targetElement) {
        targetElement.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
        
        // Update active state
        this.navItems.forEach(nav => nav.classList.remove('active'));
        item.classList.add('active');
        
        // Close menu after navigation
        setTimeout(() => this.closeMenu(), 300);
      }
    }
    
    startLiquidAnimation() {
      let time = 0;
      
      const animate = () => {
        time += 0.01;
        
        const wave1 = Math.sin(time) * 10;
        const wave2 = Math.cos(time * 1.5) * 15;
        const wave3 = Math.sin(time * 0.8) * 8;
        
        const path = `M0,0 Q${150 + wave1},${50 + wave2} 300,0 L300,400 Q${150 + wave3},${350 + wave1} 0,400 Z`;
        this.liquidPath.setAttribute('d', path);
        
        this.animationId = requestAnimationFrame(animate);
      };
      
      animate();
    }
    
    destroy() {
      if (this.animationId) {
        cancelAnimationFrame(this.animationId);
      }
    }
  }
  
  // Initialize when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    if (document.querySelector('.liquid-tab-navbar')) {
      new LiquidTabNavbar();
    }
  });
  
  // Also initialize immediately if DOM is already ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      if (document.querySelector('.liquid-tab-navbar')) {
        new LiquidTabNavbar();
      }
    });
  } else {
    if (document.querySelector('.liquid-tab-navbar')) {
      new LiquidTabNavbar();
    }
  }
</script>